{"version":3,"file":"amt.es.js","sources":["../src/global/type.js","../src/global/uuid.js","../src/global/isIP.js","../src/global/qs.js","../src/global/storage.js","../src/date/dateFormatAny.js","../src/date/dateMethods.js","../src/optimize/throttle.js","../src/optimize/debounce.js","../src/array/remove_duplicate.js","../src/string/warp.js","../src/number/float_operation.js","../src/number/splitNum.js","../src/index.js"],"sourcesContent":["let class2type = {};\nconst typeStr = 'Boolean Number String Function Array Date RegExp Object Error';\ntypeStr.split(' ').map(name => {\n  class2type['[object ' + name + ']'] = name.toLowerCase();\n});\n\n/**\n * @desc 确定JavaScript内置对象的类型，并返回小写形式的类型名称。\n * @param {Any} val 输入任意值\n * @return {String} 返回小写形式的类型名称 \n * 例如：type([]) ==> 'array'\n */\nconst type = val => {\n  return typeof val === 'object' || typeof val === 'function' ? class2type[toString.call(val)] || 'object' : typeof val;\n};\nconst $type = type;\n\n// 判断指定参数是否是一个空对象。\nconst isEmptyObject = obj => {\n  for (let name in obj) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * @desc 判断是否为空\n * @param {Any} val 输入任意值\n * @return {Boolean} 返回true/false, number类型的直接返回false\n */\nconst isNull = val => {\n  switch (type(val)) {\n  case 'string':\n    return !!(val === null || val === undefined || val === '');\n  case 'array':\n    return !!(val === null || val === undefined || val === [] || val.length === 0);\n  case 'number':\n    return false;\n  case 'object':\n    return isEmptyObject(val);\n  case 'boolean':\n    return val;\n  case 'function':\n    return val;\n  case 'date':\n    return isNaN(val.getTime());\n  default:\n    return !!(val === null || val === undefined);\n  }\n};\n\n/**\n * @desc 公共回调\n * @param {Object} fn 回调函数\n * @param {Any} data 回调数据\n * @return {Function} 返回fn(data)\n */\nlet callback = (fn, data) => {\n  if (fn && type(fn) == 'function' && fn(data)) {\n    return fn(data);\n  }\n};\nexport { type, $type, isNull, callback };","//自定义位数唯一标识符\nconst uuid = () => {\n  // 如果浏览器支持crypto\n  if (typeof crypto === 'object') {\n    // 使用crypto.randomUUID方法直接返回\n    if (typeof crypto.randomUUID === 'function') {\n      return crypto.randomUUID();\n    }\n    if (typeof crypto.getRandomValues === 'function' && typeof Uint8Array === 'function') {\n      const callback = (c) => {\n        const num = Number(c);\n        return (num ^ (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (num / 4)))).toString(16);\n      };\n      return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, callback);\n    }\n  }\n  let timestamp = new Date().getTime();\n  let perforNow = typeof performance !== 'undefined' && performance.now && performance.now() * 1000 || 0;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    let random = Math.random() * 16;\n    if (timestamp > 0) {\n      random = (timestamp + random) % 16 | 0;\n      timestamp = Math.floor(timestamp / 16);\n    } else {\n      random = (perforNow + random) % 16 | 0;\n      perforNow = Math.floor(perforNow / 16);\n    }\n    return (c === 'x' ? random : random & 0x3 | 0x8).toString(16);\n  });\n};\nexport default uuid;","/**\n * @desc 判断是否为IP地址\n * @param {String} url 输入地址\n * @return {Boolean} 返回:true||false\n */\nconst isIP = (url) => {\n  var str = url.match(/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)/g);\n  if (str == null || str == '') {\n    return false;\n  } else if (RegExp.$1 > 255 || RegExp.$2 > 255 || RegExp.$3 > 255 || RegExp.$4 > 255) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport default isIP;","/**\n * @desc 对象转qs请求字符串\n * @param {Object} obj 对象\n * @return {String} 返回:请求参数拼接字符串 {id:123,name:'xiaoming'} => id=123&name=xiaoming\n */\nconst qs = obj => {\n  let str = '';\n  Object.keys(obj).map((name, index) => {\n    let value = obj[name];\n    if (value === '?' || value === '&') {\n      value = encodeURIComponent(obj[name])\n    }\n    str += index === 0 ? `${name}=${value}` : `&${name}=${value}`;\n  });\n  return str;\n};\n\nexport default qs;","/**\n * @desc localStrorage存 二次封装，无需关心类型问题\n * @param {String} key 要存储的key\n * @param {Any} val 要存储的val\n * @return {String} 无\n * 例如：setStorage(\"str1\",\"str1的值\")\n */\nconst setStorage = (key, val) => {\n  let temp = typeof val === 'object' ? JSON.stringify(val) : val;\n  temp += '|' + typeof val;\n  try {\n    let storage = window.localStorage;\n    storage.setItem(key, temp);\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n/**\n * @desc localStrorage取 二次封装，无需关心类型问题\n * @param {String} key 要获取的key\n * @return {String} 无\n * 例如：getStorage(\"str1\")\n */\nconst getStorage = key => {\n  let val = '';\n  let type = '';\n  try {\n    let storage = window.localStorage;\n    if (storage.getItem(key)) {\n      val = storage.getItem(key).split('|')[0];\n      type = storage.getItem(key).split('|')[1];\n    }\n  } catch (e) {\n    console.log(e);\n  }\n  // 因返回的全是string类型，转换输出类型\n  let temp;\n  switch (type) {\n  case 'object':\n    temp = JSON.parse(val);\n    break;\n  case 'number':\n    temp = Number(val);\n    break;\n  default:\n    if (val === 'false') {\n      temp = false;\n    } else if (val === 'true') {\n      temp = true;\n    } else {\n      temp = val;\n    }\n    break;\n  }\n  return temp;\n};\n\n/**\n * @desc localStrorage删\n * @param {String} key 要删除的key\n * @return {String} 无\n * 例如：delStorage(\"str1\")\n */\nconst delStorage = key => {\n  try {\n    let storage = window.localStorage;\n    storage.removeItem(key);\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport { setStorage, getStorage, delStorage };","import { $type, isNull } from '../global/type';\n\n//字符串时间转成Date数据\nconst strToDate = dateObj => {\n  if ($type(dateObj) === 'string') {\n    dateObj = dateObj.replace(/T/g, ' ').replace(/\\.[\\d]{3}Z/, '').replace(/(-)/g, '/');\n    if (dateObj.indexOf('.') > 0) {\n      dateObj = dateObj.slice(0, dateObj.indexOf('.'));\n    }\n    return new Date(dateObj);\n  } else {\n    return dateObj;\n  }\n};\n\n/**\n * @desc 转化为任意格式的时间输出\n * @param {Any} date 时间\n * @param {String} fmt 格式化方式 全格式：yyyy-MM-dd hh:mm:ss:S qq WW+  默认：yyyy-MM-dd\n * @return {String} 返回:相应fmt格式\n */\nconst dateFormatAny = (date, fmt) => {\n  date = strToDate(date);\n  fmt = isNull(fmt) ? 'yyyy-MM-dd' : fmt;\n  if (!isNull(date)) {\n    date = new Date(date);\n    let o = {\n      //月份  \n      'M+': date.getMonth() + 1,\n      //日 \n      'd+': date.getDate(),\n      //小时   \n      'h+': date.getHours(),\n      //分   \n      'm+': date.getMinutes(),\n      //秒   \n      's+': date.getSeconds(),\n      //毫秒   \n      'S': date.getMilliseconds(),\n      //季度  \n      'q+': Math.floor((date.getMonth() + 3) / 3)\n    };\n    let week = {\n      0: '日',\n      1: '一',\n      2: '二',\n      3: '三',\n      4: '四',\n      5: '五',\n      6: '六'\n    };\n    if (/(y+)/.test(fmt)) {\n      fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substring(4 - RegExp.$1.length));\n    }\n    if (/(W+)/.test(fmt)) {\n      let zhou = '';\n      if (RegExp.$1.length > 1) {\n        if (RegExp.$1.length > 2) {\n          zhou = '星期';\n        } else {\n          zhou = '周';\n        }\n      } else {\n        zhou = '周';\n      }\n      fmt = fmt.replace(RegExp.$1, zhou + week[date.getDay().toString() + '']);\n    }\n    for (var k in o) if (new RegExp('(' + k + ')').test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : ('00' + o[k]).substring(('' + o[k]).length));\n    return fmt;\n  }\n  return isNull(date) ? false : date;\n};\n\nexport default dateFormatAny;","import dateFormatAny from './dateFormatAny';\nvar time = {\n  year: new Date().getFullYear(),\n  month: new Date().getMonth() + 1,\n  day: new Date().getDate()\n};\n\n/**\n * @desc 获取今日起始时间\n * @param {String} fmt 以什么格式输出：yyyy-MM-dd hh:mm:ss:S qq WW+  默认：yyyy-MM-dd\n * @return {Array} 返回:[start,end]\n */\nvar today = function today(fmt) {\n  fmt = fmt === undefined ? 'yyyy-MM-dd' : fmt;\n  var start = new Date().getTime(),\n    end = start;\n  return [dateFormatAny(start, fmt), dateFormatAny(end, fmt)];\n};\n\n/**\n * @desc 获取昨日起始时间\n * @param {String} fmt 以什么格式输出：yyyy-MM-dd hh:mm:ss:S qq WW+  默认：yyyy-MM-dd\n * @return {Array} 返回:[start,end]\n */\nvar yesterday = function yesterday(fmt) {\n  fmt = fmt === undefined ? 'yyyy-MM-dd' : fmt;\n  var start = new Date().getTime() - 3600 * 24 * 1000,\n    end = start;\n  return [dateFormatAny(start, fmt), dateFormatAny(end, fmt)];\n};\n\n/**\n * @desc 获取上月起始时间\n * @param {String} fmt 以什么格式输出：yyyy-MM-dd hh:mm:ss:S qq WW+  默认：yyyy-MM-dd\n * @return {Array} 返回:[start,end]\n */\nvar prevMonth = function prevMonth(fmt) {\n  fmt = fmt === undefined ? 'yyyy-MM-dd' : fmt;\n  var temp = {};\n  // 如果是一月份\n  if (time.month === 1) {\n    // 年份减一\n    temp.year = time.year - 1;\n    temp.month = 12;\n  } else {\n    temp.year = time.year;\n    temp.month = time.month - 1;\n  }\n  temp.day = time.day;\n\n  // 获取当月有多少天\n  var days = new Date(temp.year, temp.month, 0).getDate(),\n    start = new Date(''.concat(temp.year, '-').concat(temp.month, '-1')).getTime(),\n    end = new Date(''.concat(temp.year, '-').concat(temp.month, '-').concat(days)).getTime();\n  return [dateFormatAny(start, fmt), dateFormatAny(end, fmt)];\n};\n\n/**\n * @desc 获取本月起始时间\n * @param {Boolean} isSofar 结束时间是否截止到今天 默认false\n * @param {String} fmt 以什么格式输出：yyyy-MM-dd hh:mm:ss:S qq WW+  默认：yyyy-MM-dd\n * @return {Array} 返回:[start,end]\n */\nvar thisMonth = function thisMonth(isSofar, fmt) {\n  fmt = fmt === undefined ? 'yyyy-MM-dd' : fmt;\n  isSofar = !!isSofar;\n  var days = new Date(time.year, time.month, 0).getDate(),\n    start = new Date(''.concat(time.year, '-').concat(time.month, '-1')).getTime(),\n    end = new Date(''.concat(time.year, '-').concat(time.month, '-').concat(isSofar ? time.day : days)).getTime();\n  return [dateFormatAny(start, fmt), dateFormatAny(end, fmt)];\n};\n\n/**\n * @desc 获取近多少天的起始时间\n * @param {Number} days 天数\n * @param {String} fmt 以什么格式输出：yyyy-MM-dd hh:mm:ss:S qq WW+  默认：yyyy-MM-dd\n * @return {Array} 返回:[start,end]\n */\nvar pastDays = function pastDays(days, fmt) {\n  fmt = fmt === undefined ? 'yyyy-MM-dd' : fmt;\n  days = days === undefined ? 30 : days;\n  var start = new Date().getTime() - 3600 * 1000 * 24 * days,\n    end = new Date().getTime() - 3600 * 1000 * 24 * 1;\n  return [dateFormatAny(start, fmt), dateFormatAny(end, fmt)];\n};\n\nexport { today, yesterday, prevMonth, thisMonth, pastDays };","/**\n * @desc 节流\n * @param {Function} callback 回调函数\n * @param {Number} delay 间隔时间 默认：300\n * @param {Boolean} immediate 是否立即执行 默认:true\n * @return 没有返回值\n */\nconst throttle = (callback, delay, immediate) => {\n  delay = delay == null ? 300 : delay;\n  immediate = immediate == null ? true : immediate;\n  var timer,\n    context,\n    iNow,\n    firstTime = +new Date(),\n    args = [];\n  return function () {\n    clearTimeout(timer);\n    context = this;\n    iNow = +new Date();\n    args = Array.prototype.slice.call(arguments);\n    // 判断是否是第一次执行\n    if (immediate) {\n      immediate = false;\n      callback.apply(context, args);\n    } else {\n      // 第二次执行的时候判断时间差\n      if (iNow - firstTime > delay) {\n        firstTime = iNow;\n        callback.apply(context, args);\n      } else {\n        // 判断是否是最后一次执行\n        timer = setTimeout(function () {\n          callback.apply(context, args);\n        }, delay);\n      }\n    }\n  }\n}\n\nexport default throttle ","/**\n* @desc 防抖\n* @param {Function} callback 回调函数\n* @param {Number} delay 间隔时间 默认：16.6\n* @param {Boolean} immediate 是否立即执行 默认:true\n* @return 没有返回值\n*/\nconst debounce = (callback, delay, immediate) => {\n  delay = delay == null ? 16.6 : delay;\n  immediate = immediate == null ? true : immediate;\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    if (immediate) {\n      // 判断是否执行过\n      var flag = !timeout;\n      timeout = setTimeout(function () {\n        callback.apply(context, args);\n      }, delay);\n      if (flag) {\n        callback.apply(context, args);\n      }\n    } else {\n      timeout = setTimeout(function () {\n        callback.apply(context, args);\n      }, delay);\n    }\n  }\n}\n\nexport default debounce","// import type from '../global/type';\n/**\n *\n * @desc 对象数组去重\n * @param {Array} arr 要去重的数组\n * @param {Boolean} isObject 用于提升去重效率，可选，默认true,  object类型数据采用了针对性的去重方法，不需要可以禁用\n * @param {String} key 根据对象的具体属性进行去重，可选，默认空\n * @return {Array} 返回\n */\nfunction rda(arr, isObject, key) {\n  console.log(new Date().getTime(), '开始', arr);\n  isObject = isObject === undefined ? true : isObject;\n  if (arr && arr.length > 0) {\n    let set = new Set(arr);\n    arr = Array.from(set);\n    // 需要把对象也去重\n    if (isObject) {\n      // 以某一个key值来判断是否重复\n      if (key) {\n        let obj = {}\n        arr = arr.reduce((prev, cur) => {\n          if (cur && typeof cur === 'object' && Object.hasOwn(cur, key)) {\n            if (obj[cur[key]] === undefined) {\n              // 不区属性分类型去重\n              obj[cur[key]] = true && prev.push(cur);\n            }\n          } else {\n            prev.push(cur);\n          }\n          return prev;\n        }, []);\n        console.log(new Date().getTime(), '根据key去重');\n        return Array.from(arr);\n      }\n      // 直接转成string对比\n      else {\n        let result = [...new Set(arr.map(JSON.stringify))].map(item => {\n          return item ? JSON.parse(item) : item;\n        });\n        console.log(new Date().getTime(), '转化为string对比');\n        return result;\n      }\n    }\n    // 不包含对象的话直接返回就行了\n    else {\n      console.log(new Date().getTime(), '非objert类型直接ES6去重');\n      return arr;\n    }\n  }\n  // 数组为空直接返回\n  else {\n    console.log(new Date().getTime(), '空数据直接返回');\n    return arr;\n  }\n}\nexport default rda;","import { $type } from '../global/type';\n\n/**\n * @desc 换行 str以float分割并以tag来换行\n * @param {String} str 要换行的字符串\n * @param {String} float 以float字符分割 默认','\n * @param {String} tag 以tag来换行 默认'br换行标签'\n * @return {String} 返回整理后带换行tag的字符串\n * 例如：type([]) ==> 'array'\n */\nlet warp = (str, float, tag) => {\n  if (!str) {\n    return;\n  }\n  if ($type(str) !== 'string') {\n    return;\n  }\n  float = float === undefined ? ',' : float;\n  tag = tag === undefined ? '<br />' : tag;\n  let temp = str.split(float).reduce((prev, item, index, arr) => {\n    if (arr.length - 1 === index) {\n      prev += item;\n    } else {\n      prev += `${item}${tag}`;\n    }\n    return prev;\n  }, '');\n  return temp;\n};\n(function () {\n  // 添加到String原型链上\n  String.prototype.warp = function (float, tag) {\n    return warp(this, float, tag);\n  };\n})();\n\nexport default warp;","const reFloat = /[.]/;\n/**\n * @desc 对比传入的浮点类型数据，获取浮点类型小数点右侧最长长度\n * @param {Array} list 要对比的数组\n * @return {Number} 返回小数点右侧 最长长度\n * 例如：[0.1 , 0.22 , 0.333] ==> 3\n */\nconst getFloatRightLongest = function (list) {\n  if (!(list && list.length > 1)) {\n    return list;\n  }\n  let longer;\n  try {\n    let temp = Object.values(list).reduce((prev, item) => {\n      prev.push(reFloat.test(item) ? item.toString().split('.')[1].length : 0)\n      return prev;\n    }, []);\n    longer = Math.max(...temp);\n  } catch (e) {\n    longer = 0;\n  }\n  return longer;\n};\n\n/**\n * @desc 浮点类型 （加+）四则精度运算运算\n * @param {Number} num1 第一个数\n * @param {Number} num2 第一个数\n * @param {Number} numN 第N个数\n * @return {Number} 返回所有数相加结果\n * 例如：floatSum(0.1,0.2,0.3) ==> 0.6\n */\nconst floatSum = function (num1, num2) {\n  if (arguments.length < 2) {\n    return num1;\n  }\n  let max, list;\n  list = Object.values(arguments);\n  max = Math.pow(10, getFloatRightLongest(list));\n  if (arguments.length === 2) {\n    return Math.round(num1 * max + num2 * max) / max;\n  }\n  if (arguments.length > 2) {\n    let temp = list.reduce((prev, num) => {\n      prev += num * max;\n      return prev;\n    }, 0);\n    return Math.round(temp) / max;\n  }\n};\nconst floatJia = floatSum;\n\n/**\n * @desc 浮点类型 （减+）四则精度运算运算\n * @param {Number} num1 第一个数\n * @param {Number} num2 第一个数\n * @param {Number} numN 第N个数\n * @return {Number} 返回所有数相减结果\n * 例如：floatMin(0.8,0.3,0.4) ==> 0.1\n */\nconst floatMin = function (num1, num2) {\n  if (arguments.length < 2) {\n    return num1;\n  }\n  let max, list;\n  list = Object.values(arguments);\n  max = Math.pow(10, getFloatRightLongest(list));\n  if (arguments.length === 2) {\n    return Math.round(num1 * max - num2 * max) / max;\n  }\n  if (arguments.length > 2) {\n    let temp = list.reduce((prev, num, index) => {\n      if (index === 0) {\n        prev = num * max;\n      } else {\n        prev -= num * max;\n      }\n      return prev;\n    }, 0);\n    return Math.round(temp) / max;\n  }\n};\nconst floatJian = floatMin;\n\nexport { floatSum, floatMin, floatJia, floatJian, getFloatRightLongest };","/**\n * @desc 把数字以类似千分位形式隔开返回，也可以自定义每隔几位数隔开\n * @param {Number} num 要隔开的数 必填\n * @param {Number} count 每隔几个数 默认3\n * @param {String} num 用什么符号隔开 默认逗号,\n * @return {String} 返回类字符串\n * 例如：123456789 ==> 123,456,789\n */\nconst splitNum = (num, count, char) => {\n  count = count === undefined ? 3 : count;\n  char = char === undefined ? ',' : char;\n  let n = num;\n  let r = '';\n  let temp = '',\n    mod = 0,\n    mlen = ~~'1'.padEnd(count + 1, '0');\n  do {\n    // 求模的值， 用于获取高三位，这里可能有小数\n    mod = n % mlen;\n    // 值是不是大于1，是继续的条件\n    n = n / mlen;\n    // 高三位\n    temp = ~~mod;\n    // 1.填充: n > 1 循环未结束， 就要填充为比如 1 => 001\n    // 2.拼接“,”\n    r = (n >= 1 ? `${temp}`.padStart(count, '0') : temp) + (r ? `${char}${r}` : '');\n  } while (n >= 1);\n  const strNumber = `${num}`;\n  let index = strNumber.indexOf('.');\n  // 拼接小数部分\n  if (index >= 0) {\n    r += strNumber.substring(index);\n  }\n  return r;\n};\nexport default splitNum;","// 基础类\nconst version = '1.0.7'\nimport { type, isNull, callback } from './global/type'\nimport uuid from './global/uuid'\nimport isIP from './global/isIP'\nimport qs from './global/qs'\nimport { setStorage, getStorage, delStorage } from './global/storage'\n\n// 时间类\nimport dateFormatAny from './date/dateFormatAny'\nimport { today, yesterday, prevMonth, thisMonth, pastDays } from './date/dateMethods'\n\n// 优化类\nimport throttle from './optimize/throttle'\nimport debounce from './optimize/debounce'\n\n// 数组类\nimport rda from './array/remove_duplicate'\n\n// 字符串类\nimport warp from './string/warp'\n\n// 数字类\nimport {\n  floatSum, floatJia,\n  floatMin, floatJian,\n  getFloatRightLongest\n} from './number/float_operation'\nimport splitNum from './number/splitNum'\n\n\n// 集中在一个对象中,方便直接导出\nconst jbc = {\n  // 全局参数\n  version,\n  // 公共类\n  uuid, callback, type, isNull, qs, isIP, setStorage, getStorage, delStorage,\n  // 优化类\n  throttle, debounce,\n  // 数组类\n  rda,\n  // 字符串类\n  warp,\n  // 时间类\n  dateFormatAny, today, yesterday, prevMonth, thisMonth, pastDays,\n  // 数字类\n  floatSum, floatMin, floatJia, floatJian, getFloatRightLongest, splitNum\n}\n\nexport default jbc\n"],"names":["class2type","typeStr","split","map","name","toLowerCase","type","val","toString","call","$type","isEmptyObject","obj","isNull","undefined","length","isNaN","getTime","callback","fn","data","uuid","crypto","randomUUID","getRandomValues","Uint8Array","c","num","Number","replace","timestamp","Date","perforNow","performance","now","random","Math","floor","isIP","url","str","match","RegExp","$1","$2","$3","$4","qs","Object","keys","index","value","encodeURIComponent","setStorage","key","temp","JSON","stringify","storage","window","localStorage","setItem","e","console","log","getStorage","getItem","parse","delStorage","removeItem","strToDate","dateObj","indexOf","slice","dateFormatAny","date","fmt","o","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","week","test","getFullYear","substring","zhou","getDay","k","time","year","month","day","today","start","end","yesterday","prevMonth","days","concat","thisMonth","isSofar","pastDays","throttle","delay","immediate","timer","context","iNow","firstTime","args","clearTimeout","Array","prototype","arguments","apply","setTimeout","debounce","timeout","flag","rda","arr","isObject","set","Set","from","reduce","prev","cur","hasOwn","push","result","item","warp","float","tag","String","reFloat","getFloatRightLongest","list","longer","values","max","floatSum","num1","num2","pow","round","floatJia","floatMin","floatJian","splitNum","count","char","n","r","mod","mlen","padEnd","padStart","strNumber","version","jbc"],"mappings":"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"}